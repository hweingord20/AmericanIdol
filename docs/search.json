[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "American Idol Data Analysis",
    "section": "",
    "text": "1 Introduction\nAmerican Idol is a reality TV show where aspiring singers compete for the winning title. Once the contestants go through the final round of auditions, the they perform in front of a panel of judges and a live audience. Overall, we want to analyze what factors are correlated with winners/finalists and what contributes to the success of the show. We decided on this topic because we both grew up watching American Idol and are interested in the statistics in the background. Through our data analysis, we will examine the following questions:\n\nAre certain song choices associated with a higher change of reaching the finals or winning?\nWhich audition cities produced the most finalists or winners across seasons?\nAre younger contestants more likely to be eliminated earlier or later in the competition?\nAre certain judges associated with higher-rated seasons?\nHow has the gender ratio of finalists changed over the seasons?",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "",
    "text": "Songs: includes songs that contestants sang and competed with on American Idol from seasons 1-18 (with dimensions 2430 x 8)\nAuditions: auditions, cities, dates, and venues (with dimension 143 x 12)\nElimination Chart: eliminations by week (with dimension 457 x 46)\nFinalists: information on top contestants, including birthday, hometown, and description (with dimensions 191 x 5)\nRatings: episode ratings and reviews (with dimensions 594 x 17)\nSeasons: season-level information, including season winner, runner up and release dates and judges (with dimensions 19 x 10)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n\nCode\nauditions &lt;- read.csv(\"auditions.csv\")\n\n\n\n\nCode\nlibrary(ggplot2)\nna_counts_aud &lt;- colSums(is.na(auditions))\nna_aud_df &lt;- data.frame(\n  Column = names(na_counts_aud),\n  NA_Counts = na_counts_aud\n)\n\nggplot(na_aud_df, aes(x=reorder(Column, -NA_Counts), y = NA_Counts))+\n  geom_bar(stat = 'identity', fill='steelblue')+\n  theme_minimal()+\n  labs(\n    title = \"# of NA Values for the Audition Dataset\",\n    x='Column',\n    y='# of NA Values'\n  )+\n  theme(axis.text.x = element_text(angle=45,hjust=1))\n\n\n\n\n\n\n\n\n\n\n\nCode\nsongs &lt;- read.csv(\"songs_all.csv\")\n\n\n\n\nCode\nlibrary(ggplot2)\nna_counts_songs &lt;- colSums(is.na(songs))\nna_songs_df &lt;- data.frame(\n  Column = names(na_counts_songs),\n  NA_Counts = na_counts_songs\n)\n\nggplot(na_songs_df, aes(x=reorder(Column, -NA_Counts), y = NA_Counts))+\n  geom_bar(stat = 'identity', fill='steelblue')+\n  theme_minimal()+\n  labs(\n    title = \"# of NA Values for the Songs Dataset\",\n    x='Column',\n    y='# of NA Values'\n  )+\n  theme(axis.text.x = element_text(angle=45,hjust=1))\n\n\n\n\n\n\n\n\n\n\n\nCode\nSeasons &lt;- read.csv(\"seasons.csv\")\n\n\n\n\nCode\nna_counts_seasons &lt;- colSums(is.na(Seasons))\nna_seas_df &lt;- data.frame(\n  Column = names(na_counts_seasons),\n  NA_Counts = na_counts_seasons\n)\n\nggplot(na_seas_df, aes(x=reorder(Column, -NA_Counts), y = NA_Counts))+\n  geom_bar(stat = 'identity', fill='steelblue')+\n  theme_minimal()+\n  labs(\n    title = \"# of NA Values for the Seasons Dataset\",\n    x='Column',\n    y='# of NA Values'\n  )+\n  theme(axis.text.x = element_text(angle=45,hjust=1))\n\n\n\n\n\n\n\n\n\n\n\nCode\nratings &lt;- read.csv(\"ratings.csv\")\n\n\n\n\nCode\nna_counts_rating &lt;- colSums(is.na(ratings))\nna_rate_df &lt;- data.frame(\n  Column = names(na_counts_rating),\n  NA_Counts = na_counts_rating\n)\n\nggplot(na_rate_df, aes(x=reorder(Column, -NA_Counts), y = NA_Counts))+\n  geom_bar(stat = 'identity', fill='steelblue')+\n  theme_minimal()+\n  labs(\n    title = \"# of NA Values for the Ratings Dataset\",\n    x='Column',\n    y='# of NA Values'\n  )+\n  theme(axis.text.x = element_text(angle=45,hjust=1))\n\n\n\n\n\n\n\n\n\n\n\nCode\nfinalists &lt;- read.csv(\"finalists.csv\")\n\n\n\n\nCode\nna_counts_fin &lt;- colSums(is.na(finalists))\nna_fin_df &lt;- data.frame(\n  Column = names(na_counts_fin),\n  NA_Counts = na_counts_fin\n)\n\nggplot(na_fin_df, aes(x=reorder(Column, -NA_Counts), y = NA_Counts))+\n  geom_bar(stat = 'identity', fill='steelblue')+\n  theme_minimal()+\n  labs(\n    title = \"# of NA Values for the Finalists Dataset\",\n    x='Column',\n    y='# of NA Values'\n  )+\n  theme(axis.text.x = element_text(angle=45,hjust=1))\n\n\n\n\n\n\n\n\n\n\n\nCode\nelim &lt;- read.csv(\"elimination_chart.csv\")\n\n\n\n\nCode\nna_counts_elim &lt;- colSums(is.na(elim))\nna_elim_df &lt;- data.frame(\n  Column = names(na_counts_elim),\n  NA_Counts = na_counts_elim\n)\n\nggplot(na_elim_df, aes(x=reorder(Column, -NA_Counts), y = NA_Counts))+\n  geom_bar(stat = 'identity', fill='steelblue')+\n  theme_minimal()+\n  labs(\n    title = \"# of NA Values for the Elimation Chart Dataset\",\n    x='Column',\n    y='# of NA Values'\n  )+\n  theme(axis.text.x = element_text(angle=45,hjust=1))\n\n\n\n\n\n\n\n\n\nOverall, the Elimination Chart has the most missing values. Due to this, we decided to not use this specific dataset for our analysis and will tweak our questions accordingly. For example, we will rephrase the question: ‘Are younger contestants more likely to be eliminated earlier or later in the competition?’ to ‘What is the age distribution among the finalists?’. For the Audition datset, the column ‘guest_judge’ has the most missing values. This makes sense because there is not a guest judge on every episode. Interestingly, the finalists dataset is missing a lot of values. When further examining the dataset, we found it because there is a “hometown” and “birthplace” column. For those with the same hometown and birthplace, hometown is left as NA. For this reason, we will take out the ‘hometown’ column and just use the ‘birthplace’ column. The ratings dataset has a lot of missing values as well, but we don’t need to use these columns for the questions we are interested in answering.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "3.1 Graphs\nCode\n#install.packages(\"maps\")\n#install.packages(\"dplyr\")\n#install.packages(\"tidygeocoder\")\nCode\nlibrary(ggplot2)\nlibrary(maps)\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(tidygeocoder)\nworld_map &lt;- map_data(\"world\")\nfinalists &lt;- read.csv(\"finalists.csv\")\nfinalists_geocoded &lt;- finalists |&gt;\n  geocode(address = Birthplace, method = 'osm')\n\n\nPassing 163 addresses to the Nominatim single address geocoder\n\n\nQuery completed in: 164.7 seconds\nCode\nfinalists_geocoded\n\n\n# A tibble: 190 × 8\n   Contestant       Birthday Birthplace Hometown Description Season   lat   long\n   &lt;chr&gt;            &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;    &lt;chr&gt;        &lt;int&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 Kelly Clarkson   24-Apr-… \" Fort Wo… Burleso… \"She perfo…      1  32.8  -97.3\n 2 Justin Guarini   28-Oct-… \" Columbu… Doylest… \"He perfor…      1  32.5  -85.0\n 3 Nikki McKibbin   28-Sep-… \" Grand P… &lt;NA&gt;     \"She had p…      1  32.7  -97.0\n 4 Tamyra Gray      26-Jul-… \" Takoma … Atlanta… \"She had a…      1  39.0  -77.0\n 5 R. J. Helton     17-May-… \" Pasaden… Cumming… \"J. Helton…      1  29.7  -95.2\n 6 Christina Chris… 21-Jun-… \" Brookly… &lt;NA&gt;     \".Christin…      1  40.7  -73.9\n 7 Ryan Starr       21-Nov-… \" Sunland… &lt;NA&gt;     \"Her audit…      1  34.3 -118. \n 8 AJ Gil           5-Jul-84 \" San Die… Tacoma,… \"\"               1  32.7 -117. \n 9 Jim Verraros     8-Feb-83 \" Chicago… &lt;NA&gt;     \"He grew u…      1  41.9  -87.6\n10 EJay Day         13-Sep-… \" Lawrenc… &lt;NA&gt;     \"He auditi…      1  34.0  -84.0\n# ℹ 180 more rows\nCode\nggplot() + \n  geom_map(data = world_map, map = world_map, \n           aes(x = long, y = lat, map_id = region, group = group), \n           fill = \"white\", color = \"gray\",alpha=0.3) + \n  geom_point(data = finalists_geocoded, \n             aes(x = long, y = lat), \n             color = \"#63C5DA\", alpha = 0.6, size = 2) + \n  theme_minimal() + \n   ylim(-50,100)+\n  ggtitle(\"World Distribution of Finalists\")\n\n\nWarning in geom_map(data = world_map, map = world_map, aes(x = long, y = lat, :\nIgnoring unknown aesthetics: x and y\n\n\nWarning: Removed 7 rows containing missing values or values outside the scale range\n(`geom_point()`).\nCode\nusa_map &lt;- filter(world_map,region==\"USA\")\nusa_finalists &lt;- filter(finalists_geocoded, long &lt; -50, lat &gt;0)\nggplot() + \n  geom_map(data = usa_map, map = usa_map, \n           aes(x = long, y = lat, map_id = region, group = group), \n           fill = \"white\", color = \"black\") + \n  geom_point(data = usa_finalists, \n             aes(x = long, y = lat), \n             color = \"#63C5DA\", alpha = 0.6, size = 2) + \n  theme_minimal() + \n  coord_fixed(ratio=1.2)+\n  xlim(-130,-60)+\n  ylim(25,50)+\n  ggtitle(\"USA Distribution of Finalists\")\n\n\nWarning in geom_map(data = usa_map, map = usa_map, aes(x = long, y = lat, :\nIgnoring unknown aesthetics: x and y\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  }
]